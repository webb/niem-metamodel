// wantlists; only wantlists
digraph G {
  edge [fontname = "Helvetica", fontsize = 10, dir = forward];
  node [fontname = "Helvetica", fontsize = 10, width = 0, height = 0, label="\N\l"];
  rankdir = TB;

  node [shape=box,style="rounded"];
  
  // model ///////////////////////////////////////////////////////////////////

  model [label="\N\l- namespace\l- property\l- class\l- datatype\l"];

  // namespace ///////////////////////////////////////////////////////

  namespace [label="\N\l- namespace URI\l- namespace prefix\l- definition\l"];

  // class ///////////////////////////////////////////////////////

  class [label="\N\l- namespace\l- name: string[1..n]\l- definition\l- abstract indicator\l"];
  "extension of" [label="\N\l"];
  class -> "extension of";
  class -> "has property";
  class -> "has value";
  "extension of" -> class [constraint=false];
  
  "has value" [label="\N\l"];
  "has value" -> datatype;

  "has property" [label="\N\l- sequence ID\l- minimum occurence\l- maximum occurrence\l"];
  "has property" -> "property";

  // property ///////////////////////////////////////////////////////

  property [label="\N\l- namespace\l- object term: string[0-n]\l- property term: string[1-n]\l- definition\l- abstract indicator\l"];
  property -> class;
  property -> "subproperty of" -> property;

  // datatype ///////////////////////////////////////////////////////

  datatype [label="\N\l- namespace\l- name\l- definitionText\l"];
  datatype -> { "list of" "union of" "restriction of" };
  { "list of" "union of" "restriction of" } -> datatype;

  "restriction of" -> facets;

  // facets
  edge [dir=back, label="subst"];
  facets [label="Valid facets:\l- Length\l- MinLength\l- MaxLength\l- Pattern\l- Enumeration\l- WhiteSpace\l- MaxInclusive\l- MaxExclusive\l- MinExclusive\l- MinInclusive\l- TotalDigits\l- FractionDigits\l"];
  
}
